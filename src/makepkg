#!/usr/bin/env bash

# Nako: Ports-like system for Debian
# License: GNU General Public License, version 3 or later
# Copyright (c) 2023 Radio New Japan Broadcasting Club <njb-fm@via.tokyo.jp>
# Copyright (c) 2023 by Hayate Nakamura

NAKO_VERSION="0.1"
srcdir=$(pwd)/src
pkgdir=$(pwd)/pkg

read_pkgbuild() {
  MAINTAINER=$(grep -oP '(?<=# Maintainer:).+' PKGBUILD)
  PKGNAME=$(grep -oP '(?<=pkgname=).+' PKGBUILD)
  PKGVER=$(grep -oP '(?<=pkgver=).+' PKGBUILD)
  PKGREL=$(grep -oP '(?<=pkgrel=).+' PKGBUILD)
  PKGDESC=$(grep -oP '(?<=pkgdesc=).+' PKGBUILD)
  ARCH=$(grep -oP '(?<=arch=).+' PKGBUILD)
  URL=$(grep -oP '(?<=url=).+' PKGBUILD)

  if [[ $(grep epoch PKGBUILD|grep -oP '.+(?==)') == "epoch" ]]; then
    EPOCH=$(grep -oP '(?<=epoch=).+' PKGBUILD)
    PKGVERFULL="${EPOCH}:${PKGVER}-${PKGREL}"
  else
    PKGVERFULL="${PKGVER}-${PKGREL}"
  fi

  if [ ${ARCH} == "all" ] || [ ${ARCH} == "('all')" ] || [ ${ARCH} == '("all")' ]; then
    ARCH=all
  elif [ ${ARCH} == "amd64" ] || [ ${ARCH} == "('amd64')" ] || [ ${ARCH} == '("amd64")' ]; then
    ARCH=amd64
  fi

  if [[ $(grep section PKGBUILD|grep -oP '.+(?==)') == "section" ]]; then
    PKGSECTION=$(grep -oP '(?<=section=).+' PKGBUILD)
  fi

  if [[ $(grep priority PKGBUILD|grep -oP '.+(?==)') == "priority" ]]; then
    PKGPRIORITY=$(grep -oP '(?<=priority=).+' PKGBUILD)
  fi

  # Dependencies
  #DEPS=

  #BUILDDEPS=
}

package() {
  mkdir ${srcdir} ${pkgdir}

  mkdir ${pkgdir}/DEBIAN

  echo "Package: ${PKGNAME}" > ${pkgdir}/DEBIAN/control
  echo "Version: ${PKGVERFULL}" >> ${pkgdir}/DEBIAN/control
  echo "Architecture: ${ARCH}" >> ${pkgdir}/DEBIAN/control
  echo "Maintainer: ${MAINTAINER}" >> ${pkgdir}/DEBIAN/control

  if [[ $(grep section PKGBUILD|grep -oP '.+(?==)') == "section" ]]; then
    echo "Section: ${PKGSECTION}" >> ${pkgdir}/DEBIAN/control
  fi

  if [[ $(grep priority PKGBUILD|grep -oP '.+(?==)') == "priority" ]]; then
    echo "Priority: ${PKGPRIORITY}" >> ${pkgdir}/DEBIAN/control
  fi

  echo "Description: ${PKGDESC}" >> ${pkgdir}/DEBIAN/control

  # Debug Message
  cat ${pkgdir}/DEBIAN/control

  echo "Creating ${PKGNAME}_${PKGVERFULL}_${ARCH}.deb package..." 
  # dpkg-deb -Z${compress} -b pkg ${PKGNAME}_${PKGVERFULL}_${ARCH}.deb
}

main() {
  read_pkgbuild
  package
}

main

